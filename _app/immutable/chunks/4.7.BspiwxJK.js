import{s as me,a as G,e as re}from"./scheduler.y4uHs2UB.js";import{S as ce,i as de,c as I,a as K,m as N,t as Q,b as R,d as V,e as u,s as m,u as M,f,x as c,n as d,g as he,v as P,h as l,k as i,y as F}from"./index.Cysm1UDV.js";import{g as _e,a as ue}from"./Icon.NybfZExb.js";import{C as ve}from"./ChangelogEntryWrapper.DUwd0ypD.js";import{O as fe}from"./OuterLink.ClwKgp00.js";function xe(h){let n;return{c(){n=M("github")},l(o){n=P(o,"github")},m(o,a){i(o,n,a)},d(o){o&&l(n)}}}function ge(h){let n;return{c(){n=M("twitter")},l(o){n=P(o,"twitter")},m(o,a){i(o,n,a)},d(o){o&&l(n)}}}function be(h){let n,o="this update includes a bunch of improvements, many of which were made thanks to the community :D",a,p,s="service-related improvements:",r,_,X="<li>private soundcloud links are now supported (#68);</li> <li>tiktok usernames with dots in them no longer confuse cobalt (#71);</li> <li>.ogg files no longer wrongfully include a video channel (#67);</li> <li>fixed an issue that caused cobalt to freak out when user attempted to download an audio from audio-only service with “mute video” option enabled.</li>",T,b,Y="ui improvements:",q,w,Z="<li>popup padding has been evened out. popups are now able to fit in more information on scroll, especially on mobile;</li> <li>all buttons are now of even size and are displayed without any padding issues across all modern browsers and devices;</li> <li>checkbox is no longer crippled on ios;</li> <li>many explanation texts have been simplified to get rid of unnecessary bloat (no bullshit, remember?);</li> <li>moved tiktok section in video settings higher due to higher priority;</li> <li>fixed unexpectedly displayed scrollbars on switch rows in firefox.</li>",j,$,ee="stability improvements:",U,y,te="<li>ffmpeg process now should end upon finishing the render;</li> <li>ffmpeg should also quit when download is abruptly cut off;</li> <li>fixed a memory leak that was caused by misconfigured stream information caching (#63).</li>",z,C,ne="internal improvements:",E,k,le="<li>requested streams are now stored in cache for 2 minutes instead of 1000 hours (yes, 1000 hours, i fucked up);</li> <li>cached data is now reused if user requests same content within 2 minutes;</li> <li>page render module is now even cleaner than before;</li> <li>proper support for bullet-points in loc strings.</li>",O,v,W,x,A,g,B,S,L,ie="thank you for using cobalt, and thank you for reading this changelog.",D,H,oe="you’re amazing, keep it up :)",J;return x=new fe({props:{href:"https://github.com/imputnet/cobalt",rel:"nofollow",$$slots:{default:[xe]},$$scope:{ctx:h}}}),g=new fe({props:{href:"https://twitter.com/justusecobalt",rel:"nofollow",$$slots:{default:[ge]},$$scope:{ctx:h}}}),{c(){n=u("p"),n.textContent=o,a=m(),p=u("p"),p.textContent=s,r=m(),_=u("ul"),_.innerHTML=X,T=m(),b=u("p"),b.textContent=Y,q=m(),w=u("ul"),w.innerHTML=Z,j=m(),$=u("p"),$.textContent=ee,U=m(),y=u("ul"),y.innerHTML=te,z=m(),C=u("p"),C.textContent=ne,E=m(),k=u("ul"),k.innerHTML=le,O=m(),v=u("p"),W=M("you can suggest features or report bugs on "),I(x.$$.fragment),A=M(" or "),I(g.$$.fragment),B=M(". both work just fine, use whichever you’re more comfortable with."),S=m(),L=u("p"),L.textContent=ie,D=m(),H=u("p"),H.textContent=oe},l(e){n=f(e,"P",{"data-svelte-h":!0}),c(n)!=="svelte-1cihqru"&&(n.textContent=o),a=d(e),p=f(e,"P",{"data-svelte-h":!0}),c(p)!=="svelte-1tb1b5s"&&(p.textContent=s),r=d(e),_=f(e,"UL",{"data-svelte-h":!0}),c(_)!=="svelte-lxx3mx"&&(_.innerHTML=X),T=d(e),b=f(e,"P",{"data-svelte-h":!0}),c(b)!=="svelte-1cujzah"&&(b.textContent=Y),q=d(e),w=f(e,"UL",{"data-svelte-h":!0}),c(w)!=="svelte-16qnyd"&&(w.innerHTML=Z),j=d(e),$=f(e,"P",{"data-svelte-h":!0}),c($)!=="svelte-14txl0a"&&($.textContent=ee),U=d(e),y=f(e,"UL",{"data-svelte-h":!0}),c(y)!=="svelte-1sqes1p"&&(y.innerHTML=te),z=d(e),C=f(e,"P",{"data-svelte-h":!0}),c(C)!=="svelte-ouv43k"&&(C.textContent=ne),E=d(e),k=f(e,"UL",{"data-svelte-h":!0}),c(k)!=="svelte-11ahi8"&&(k.innerHTML=le),O=d(e),v=f(e,"P",{});var t=he(v);W=P(t,"you can suggest features or report bugs on "),K(x.$$.fragment,t),A=P(t," or "),K(g.$$.fragment,t),B=P(t,". both work just fine, use whichever you’re more comfortable with."),t.forEach(l),S=d(e),L=f(e,"P",{"data-svelte-h":!0}),c(L)!=="svelte-1rnsn94"&&(L.textContent=ie),D=d(e),H=f(e,"P",{"data-svelte-h":!0}),c(H)!=="svelte-2gy5wg"&&(H.textContent=oe)},m(e,t){i(e,n,t),i(e,a,t),i(e,p,t),i(e,r,t),i(e,_,t),i(e,T,t),i(e,b,t),i(e,q,t),i(e,w,t),i(e,j,t),i(e,$,t),i(e,U,t),i(e,y,t),i(e,z,t),i(e,C,t),i(e,E,t),i(e,k,t),i(e,O,t),i(e,v,t),F(v,W),N(x,v,null),F(v,A),N(g,v,null),F(v,B),i(e,S,t),i(e,L,t),i(e,D,t),i(e,H,t),J=!0},p(e,t){const se={};t&2&&(se.$$scope={dirty:t,ctx:e}),x.$set(se);const ae={};t&2&&(ae.$$scope={dirty:t,ctx:e}),g.$set(ae)},i(e){J||(Q(x.$$.fragment,e),Q(g.$$.fragment,e),J=!0)},o(e){R(x.$$.fragment,e),R(g.$$.fragment,e),J=!1},d(e){e&&(l(n),l(a),l(p),l(r),l(_),l(T),l(b),l(q),l(w),l(j),l($),l(U),l(y),l(z),l(C),l(E),l(k),l(O),l(v),l(S),l(L),l(D),l(H)),V(x),V(g)}}}function we(h){let n,o;const a=[h[0],pe];let p={$$slots:{default:[be]},$$scope:{ctx:h}};for(let s=0;s<a.length;s+=1)p=G(p,a[s]);return n=new ve({props:p}),{c(){I(n.$$.fragment)},l(s){K(n.$$.fragment,s)},m(s,r){N(n,s,r),o=!0},p(s,[r]){const _=r&1?_e(a,[r&1&&ue(s[0]),r&0&&ue(pe)]):{};r&2&&(_.$$scope={dirty:r,ctx:s}),n.$set(_)},i(s){o||(Q(n.$$.fragment,s),o=!0)},o(s){R(n.$$.fragment,s),o=!1},d(s){V(n,s)}}}const pe={title:"we're better together! thank you for bug reports.",date:"Jan 13, 2023",banner:{file:"bettertogether.webp",alt:"various different pokémon jumping in happiness"}};function $e(h,n,o){return h.$$set=a=>{o(0,n=G(G({},n),re(a)))},n=re(n),[n]}class Me extends ce{constructor(n){super(),de(this,n,$e,we,me,{})}}export{Me as default,pe as metadata};
