import{s as X,a as N,e as O,n as Z}from"./scheduler.y4uHs2UB.js";import{S as ee,i as te,c as le,a as ne,m as oe,t as ie,b as ae,d as se,e as a,s as p,f as s,x as u,n as c,j as ue,k as l,h as n}from"./index.Cysm1UDV.js";import{g as re,a as Q}from"./Icon.NybfZExb.js";import{C as de}from"./ChangelogEntryWrapper.Cx7_ByQL.js";function pe(q){let o,v=`hey, ever wanted to download a youtube video without a hassle? cobalt is here to help. this update fixes all issues related to youtube downloads.
not only that, but it also introduces features never before seen in a downloader, such as youtube dub downloads! read below to see what’s up :)`,m,r,i="tl;dr:",d,f,S="<li>audio in youtube videos FINALLY no longer gets cut off.</li> <li>you now can pick any video resolution you want (from 360p to 8k) and any possible youtube video codec (h264/av1/vp9).</li> <li>you now can download youtube videos with dubs in your native language. just check settings &gt; audio.</li> <li>youtube processing has been vastly sped up.</li>",H,h,F="ok, now onto the nerdy part of changelog. this update is pretty huge and includes improvements across the board.",P,y,W="service improvements:",$,b,Y="<li>all youtube functionality has been reworked. cobalt now relies on innertube apis, not web scraping.</li> <li>random audio cut off issue has been fixed, let me know if it ever occurs again. (closes #62, #66, #75, #88).</li> <li>added support for youtube dubs. currently it’s using your browser’s default language when enabled, but i have plans on making a picker. i’ll ask people on twitter and mastodon if this feature is needed, and add a picker in next updates.</li> <li>instead of adding more quality presets, i added granular quality options. pick whatever you like, from 360p up to 4320p (for all services, not just youtube).</li> <li>replaced a format picker with codec picker for youtube. you can pick h264, av1, or vp9. all of them should work as expected (closes #88).</li> <li>youtube audio files are now properly matched to corresponding video files.</li> <li>it’s now always possible to download pristine h264 720p/360p videos from youtube. these videos will work ANYWHERE, so they’re default for mobile.</li> <li>youtube requests are no longer permanently cached, ram usage should drop even further.</li> <li>youtube video and audio file names now include codec and dub language when applicable.</li> <li>max video and audio duration limits have been bumped up to 3 hours.</li> <li>general performance of entire youtube download process has been greatly improved.</li> <li>vk module has been reworked to be more compact and not make use of outdated technique of quality picking. should also be way more reliable.</li>",M,x,D="internal improvements:",T,_,I="<li>cleaned up services config, all constants have been moved directly to modules for quicker access.</li> <li>matching module has been slightly cleaned up.</li>",j,w,R="interface improvements:",z,C,B="<li>many descriptions and error messages have been slightly tuned to be less wordy.</li> <li>unnecessary title duplications in settings have been merged into one.</li> <li>added more clarity to quality and codec descriptions.</li>",U,g,G="if you use cobalt api, please note that you have to update your creation to support new features.",A,k,J="this is the second batch of 5.x improvements, there’s way more to come. thank you for being here, i really appreciate your support.",E,L,K="if you want to thank me (the developer), there’s a nice tab under this changelog that has “donations” text on it. anything helps me continue developing and hosting the friendliest media downloader :D";return{c(){o=a("p"),o.textContent=v,m=p(),r=a("span"),r.textContent=i,d=p(),f=a("ul"),f.innerHTML=S,H=p(),h=a("p"),h.textContent=F,P=p(),y=a("p"),y.textContent=W,$=p(),b=a("ul"),b.innerHTML=Y,M=p(),x=a("p"),x.textContent=D,T=p(),_=a("ul"),_.innerHTML=I,j=p(),w=a("p"),w.textContent=R,z=p(),C=a("ul"),C.innerHTML=B,U=p(),g=a("p"),g.textContent=G,A=p(),k=a("p"),k.textContent=J,E=p(),L=a("p"),L.textContent=K,this.h()},l(e){o=s(e,"P",{"data-svelte-h":!0}),u(o)!=="svelte-idxs8g"&&(o.textContent=v),m=c(e),r=s(e,"SPAN",{class:!0,"data-svelte-h":!0}),u(r)!=="svelte-ldmrzu"&&(r.textContent=i),d=c(e),f=s(e,"UL",{"data-svelte-h":!0}),u(f)!=="svelte-1vc9l7r"&&(f.innerHTML=S),H=c(e),h=s(e,"P",{"data-svelte-h":!0}),u(h)!=="svelte-1nzh16q"&&(h.textContent=F),P=c(e),y=s(e,"P",{"data-svelte-h":!0}),u(y)!=="svelte-18yukle"&&(y.textContent=W),$=c(e),b=s(e,"UL",{"data-svelte-h":!0}),u(b)!=="svelte-17ae1v7"&&(b.innerHTML=Y),M=c(e),x=s(e,"P",{"data-svelte-h":!0}),u(x)!=="svelte-ouv43k"&&(x.textContent=D),T=c(e),_=s(e,"UL",{"data-svelte-h":!0}),u(_)!=="svelte-2uzn25"&&(_.innerHTML=I),j=c(e),w=s(e,"P",{"data-svelte-h":!0}),u(w)!=="svelte-ymdl9m"&&(w.textContent=R),z=c(e),C=s(e,"UL",{"data-svelte-h":!0}),u(C)!=="svelte-1s4sogu"&&(C.innerHTML=B),U=c(e),g=s(e,"P",{"data-svelte-h":!0}),u(g)!=="svelte-1ep7n5h"&&(g.textContent=G),A=c(e),k=s(e,"P",{"data-svelte-h":!0}),u(k)!=="svelte-a4sdlu"&&(k.textContent=J),E=c(e),L=s(e,"P",{"data-svelte-h":!0}),u(L)!=="svelte-1dg5zxu"&&(L.textContent=K),this.h()},h(){ue(r,"class","text-backdrop")},m(e,t){l(e,o,t),l(e,m,t),l(e,r,t),l(e,d,t),l(e,f,t),l(e,H,t),l(e,h,t),l(e,P,t),l(e,y,t),l(e,$,t),l(e,b,t),l(e,M,t),l(e,x,t),l(e,T,t),l(e,_,t),l(e,j,t),l(e,w,t),l(e,z,t),l(e,C,t),l(e,U,t),l(e,g,t),l(e,A,t),l(e,k,t),l(e,E,t),l(e,L,t)},p:Z,d(e){e&&(n(o),n(m),n(r),n(d),n(f),n(H),n(h),n(P),n(y),n($),n(b),n(M),n(x),n(T),n(_),n(j),n(w),n(z),n(C),n(U),n(g),n(A),n(k),n(E),n(L))}}}function ce(q){let o,v;const m=[q[0],V];let r={$$slots:{default:[pe]},$$scope:{ctx:q}};for(let i=0;i<m.length;i+=1)r=N(r,m[i]);return o=new de({props:r}),{c(){le(o.$$.fragment)},l(i){ne(o.$$.fragment,i)},m(i,d){oe(o,i,d),v=!0},p(i,[d]){const f=d&1?re(m,[d&1&&Q(i[0]),d&0&&Q(V)]):{};d&2&&(f.$$scope={dirty:d,ctx:i}),o.$set(f)},i(i){v||(ie(o.$$.fragment,i),v=!0)},o(i){ae(o.$$.fragment,i),v=!1},d(i){se(o,i)}}}const V={title:"the evil has been defeated",date:"Feb 26, 2023",banner:{file:"happymeowth.webp",alt:"meowth jumping up into the sky very excitedly"}};function me(q,o,v){return q.$$set=m=>{v(0,o=N(N({},o),O(m)))},o=O(o),[o]}class be extends ee{constructor(o){super(),te(this,o,me,ce,X,{})}}export{be as default,V as metadata};
